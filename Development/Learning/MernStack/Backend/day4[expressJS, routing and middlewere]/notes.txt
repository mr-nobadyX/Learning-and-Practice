// Express is a node package which have a set of rules and regulations.
// Manages everything from receiving the request and giving the dynamic response

// Setting us a basic epress aplication.
// basic routing creating
// request and response handling  

// middleware 

// error handling 
// special route for specifically handling the error

- Express.js is a Node.js web application framework:
  ```
  const express = require('express');
  const app = express();
  ```

- It handles receiving requests and generating responses:
  ```
  app.get('/', (req, res) => {
    res.send('Hello, World!');
  });
  ```

- To set up a basic Express application:
  1. Import the Express module
  2. Create an Express application instance
  3. Define routes to handle different URLs
  4. Set up request and response handling
  5. Configure middleware for tasks like parsing request bodies
  6. Implement error handling

- Routing in Express:
  ```
  app.get('/users', (req, res) => {
    res.send('Users page');
  });

  app.post('/users', (req, res) => {
    // Handle POST request to /users
  });
  ```

- Middleware functions:
  ```
  app.use(express.json()); // Parse JSON request bodies
  app.use((req, res, next) => {
    console.log('Request received');
    next();
  });
  ```

- Error handling in Express:
  ```
  app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).send('Something went wrong!');
  });
  ```

- Special routes for error handling:
  ```
  app.use((req, res) => {
    res.status(404).send('Page not found');
  });
  ```